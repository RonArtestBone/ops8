#include "lcd.h"
#include <stdio.h>
//#include <stdlib.h>
#include "hzk16song.h"


#define reset	(0x00+11)
#define cs1		(0x00+15)
#define rs		(0x00+12)
#define sclk	(0x10+3)
#define sid		(0x10+5)
#define led		(0x10+0)

#if 1
#define delay(x)
#else
#define delay(x) delayUs(x*1)
#endif


lcd glcd,*plcd=0;

//extern const char ascii_table_5x7[95*5];
extern const char asc12[];

extern "C"
{
	#include <string.h>
	void wr_io( unsigned char  pin,  unsigned char val ){}
	void delayUs(volatile signed long us){}
	void SPI3_SendData( char Data ){}
	void setLight(int val){}
	void writeLED(char val){}
	char* mystrtok(char* str,const char* flag)
	{
	    static char* p=NULL;
		static char buf[400];
		static char* pend=NULL;
	    char * pi;
	    const char* pflag=flag;

	    if(flag==NULL)
	        return NULL;
	    if(str==NULL&&p==NULL)
	        return NULL;
	    if(str){
			int len=strlen(str);
			if(len){
				p = buf;
				strcpy(p,str);
				/*while(*str)
				{
				*p++=*str++;
				}*/
				pend = p+len;
			}
	    }
		if(p>=pend)
			return NULL;
        while(*p)
        {
            pflag = flag;
            while(*pflag)
            {
                if(*p==*pflag){
                   *p=0;
                   break;
                }
                pflag++;
            }
            if(*pflag==0)break;
            else p++;
        }
		pi=p;
		//   printf("\n[%s]\n",pi);
		while(*p)
		{
			pflag = flag;
			while(*pflag)
			{

					if(*p==*pflag){
						*p=0;
						break;
					}
					pflag++;
			}
			if(*p==0)
				break;
			p++;
		}
		if(p>=pend)
			return NULL; 
		p++;
		return pi;
	}
}


int str2int(const char* c)
{
	int num=0;
	while(c[0]>='0'&&c[0]<='9')
	{
		num*=10;
		num += c[0]-'0';
		c++;
	}
	return num;
}
void view(char* c)
{
	plcd->readString(c);
	plcd->frush();
	setLight(plcd->backVal);
	writeLED(plcd->lightVal);
	//setLight(50);
	//writeLED(0xaa);
}
void LCD_Init(void)
{
	//int x=0;
	//int y=0;
	//plcd = &glcdnew lcd(128,64);
	plcd = &glcd;
	plcd->init(128,64);
	//plcd->clear_screen();
	view("<T 16 \"0123456789ABCDEF\"><C 15><E><T 12 \"   ~Please wait...\"><E><T 16 \"0123456789ABCDEF\"><E><T 16 \"0123456789ABCDEF\"><C 15>");
	/*plcd->init();
	plcd->clear_screen();
	//plcd->Out(&x,&y,"    CTB    ",12);
	//x=0;
	// y=16;
	//plcd->Out(&x,&y,"超越自我与世界" );
	// plcd->readString("<T 16 \"111我222\"><C 3><E><T 16 \"22他33\"><C 2>");
	plcd->readString("<T 16 \"111我222\"><C 3><E><T 16 \"22他33\"><C 2>");
	plcd->frush();*/
	//wr_io(led,1);
}
const char lcd::ascii_table_8x16[95*16]=
{
    /*-- 文字: --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: ! --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,
    /*-- 文字: " --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: # --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,
    /*-- 文字: $ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,
    /*-- 文字: % --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,
    /*-- 文字: & --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,
    /*-- 文字: ' --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: ( --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,
    /*-- 文字: ) --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,
    /*-- 文字: * --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,
    /*-- 文字: + --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,
    /*-- 文字: , --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: - --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
    /*-- 文字: . --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: / --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,
    /*-- 文字: 0 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,
    /*-- 文字: 1 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
    /*-- 文字: 2 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,
    /*-- 文字: 3 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,
    /*-- 文字: 4 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,
    /*-- 文字: 5 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,
    /*-- 文字: 6 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,
    /*-- 文字: 7 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,
    /*-- 文字: 8 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,
    /*-- 文字: 9 --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,
    /*-- 文字: : --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,
    /*-- 文字: ; --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,
    /*-- 文字: < --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,
    /*-- 文字: = --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,
    /*-- 文字: > --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,
    /*-- 文字: ? --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,
    /*-- 文字: @ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,
    /*-- 文字: A --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,
    /*-- 文字: B --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,
    /*-- 文字: C --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,
    /*-- 文字: D --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,
    /*-- 文字: E --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,
    /*-- 文字: F --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,
    /*-- 文字: G --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,
    /*-- 文字: H --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,
    /*-- 文字: I --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
    /*-- 文字: J --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,
    /*-- 文字: K --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,
    /*-- 文字: L --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,
    /*-- 文字: M --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,
    /*-- 文字: N --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,
    /*-- 文字: O --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,
    /*-- 文字: P --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,
    /*-- 文字: Q --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,
    /*-- 文字: R --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,
    /*-- 文字: S --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,
    /*-- 文字: T --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,
    /*-- 文字: U --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,
    /*-- 文字: V --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,
    /*-- 文字: W --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,
    /*-- 文字: X --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,
    /*-- 文字: Y --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,
    /*-- 文字: Z --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,
    /*-- 文字: [ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,
    /*-- 文字: \ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,
    /*-- 文字: ] --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,
    /*-- 文字: ^ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: _ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
    /*-- 文字: ` --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    /*-- 文字: a --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,
    /*-- 文字: b --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,
    /*-- 文字: c --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,
    /*-- 文字: d --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,
    /*-- 文字: e --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,
    /*-- 文字: f --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
    /*-- 文字: g --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,
    /*-- 文字: h --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,
    /*-- 文字: i --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
    /*-- 文字: j --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,
    /*-- 文字: k --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,
    /*-- 文字: l --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,
    /*-- 文字: m --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,
    /*-- 文字: n --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,
    /*-- 文字: o --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,
    /*-- 文字: p --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,
    /*-- 文字: q --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,
    /*-- 文字: r --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,
    /*-- 文字: s --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,
    /*-- 文字: t --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,
    /*-- 文字: u --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,
    /*-- 文字: v --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,
    /*-- 文字: w --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,
    /*-- 文字: x --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,
    /*-- 文字: y --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,
    /*-- 文字: z --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,
    /*-- 文字: { --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,
    /*-- 文字: | --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,
    /*-- 文字: } --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,
    /*-- 文字: ~ --*/
    /*-- Comic Sans MS12; 此字体下对应的点阵为：宽x 高=8x16 --*/
    //0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//0x00,0x06<<5,0x01<<5,0x01<<5,0x02<<5,0x02<<5,0x04<<5,0x04<<5,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
	//0x00,0x06<<6,0x01<<6,0x01<<6,0x02<<6,0x02<<6,0x04<<6,0x04<<6,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x01
	0x00,0x02<<6,0x01<<6,0x01<<6,0x02<<6,0x02<<6,0x00<<6,0x00<<6,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x01
};
lcd::lcd()
{
}
lcd::~lcd()
{
}
void lcd::init(int width,int height)
{
	static char mbuf[128*64/8];
	m_width = width;
	m_height = height;
	backVal = 50;
	lightVal = 0x3f;
 	//buf=new char((width*height)>>3);
	buf = mbuf;
    memset(buf,0,(width*height)>>3);
    wr_io(cs1,0);
    wr_io(reset,0); /*低电平复位*/
    delay(100);
    wr_io(reset,1); /*复位完毕*/
    delay(200);
	transfer_command(0xe2); /*软复位*/
	delay(10);
	transfer_command(0x2c); /*升压步聚1*/
	delay(10);
	transfer_command(0x2e); /*升压步聚2*/
	delay(10);
	transfer_command(0x2f); /*升压步聚3*/
	delay(10);	
	transfer_command(0x24); /*粗调对比度，可设置范围0x20～0x27 25*/
	transfer_command(0x81); /*微调对比度*/
	transfer_command(0x28); /*微调对比度的值，可设置范围0x00～0x3f 18*/
	transfer_command(0xa2); /*1/9 偏压比（bias）*/
	transfer_command(0xc8); /*行扫描顺序：从上到下*/
	transfer_command(0xa0); /*列扫描顺序：从左到右*/
	transfer_command(0x60); /*起始行：第一行开始*/
	transfer_command(0xaf); /*开显示*/
	wr_io(cs1,1);
}

void lcd::transfer_command(char cmd)
{
    //char i;
    wr_io(cs1,0);
    wr_io(rs,0);
    delay(1);
    SPI3_SendData(cmd);
    /*for(i=0; i<8; i++)
    {
        wr_io(sclk,0);
    		  delay(1);
        if(cmd&0x80) wr_io(sid,1);
        else wr_io(sid,0);
    		  delay(1);
        wr_io(sclk,1);
    		delay(1);
        cmd=cmd<<=1;
    }*/
}
void lcd::transfer_data(char data)
{
    //char i;
    wr_io(cs1,0);
    wr_io(rs,1);
    delay(1);
    SPI3_SendData(data);
    /* for(i=0; i<8; i++)
     {
         wr_io(sclk,0);
    		delay(1);
         if(data&0x80) wr_io(sid,1);
         else wr_io(sid,0);
    		  delay(1);
         wr_io(sclk,1);
    		   delay(1);
         data=data<<=1;
     }*/
}
void lcd::lcd_address(unsigned char page,unsigned char column)
{
    wr_io(cs1,0);
    column=column; //我们平常所说的第1 列，在LCD 驱动IC 里是    第0 列。所以在这里减去1.
    page=page-1;
    transfer_command(0xb0+page); //设置页地址。每页是8 行。一个画面的64 行被分成8 个页。我们平常所说的第1 页，在LCD 驱动IC 里是第0 页，所以在这里减去1*/
    transfer_command(((column>>4)&0x0f)+0x10); //设置列地址的高4 位
    transfer_command(column&0x0f); //设置列地址的低4 位
}
void lcd::clear_screen(void)
{
    unsigned char i,j;
    wr_io(cs1,0);
    //for(i=0; i<(m_height>>3); i++)
	for(i=0; i<9; i++){
        lcd_address(1+i,1);
        for(j=0; j<132; j++){
            transfer_data(0x0);
        }
    }
    wr_io(cs1,1);
    memset(m_line,0,sizeof(m_line));
}
void lcd::write_point(int x,int y,int val)
{
	//if(x<128){
	if(x<m_width){
    	if(val)
        	buf[x+(y/8)*128]|=(1<<(y&7));
    	else
        	buf[x+(y/8)*128]&=(~(1<<(y&7)));
	}
}
//void lcd::out_char(int* x,int* y,const char** c,int size)
void lcd::out_char(int* x,int* y,char** c,int size)
{
	//size = size&0x7f;
    if((size&0x7f) == 12){
        int xx,yy;
        int width=6;
		// if(size&0x80)
		//width++;
        if(c[0][0]<128){
            for(yy=0; yy<12; yy++){
                for(xx=0; xx<width; xx++){
					if(size&0x80)
						write_point(x[0]+xx,y[0]+yy+2,!read_point(xx,yy,c[0],12));
					else
                    	write_point(x[0]+xx,y[0]+yy+2,read_point(xx,yy,c[0],12));
                }
            }
            x[0]+=width;
            (*c)+=1;
        }
        return ;
    }
    int xx,yy;
    int width=8;
    if((c[0][0]&0x80)==0){
        switch(c[0][0]){
	        case'.':
	            width = 4;
	            break;
	        default:
	            break;
        }
    }
    else{
        width=16;
    }
	//if((size&0x80)&&width!=16)
	//width++;
    for(yy=0; yy<16; yy++){
        for(xx=0; xx<width; xx++){
            if(size&0x80)
				write_point(x[0]+xx,y[0]+yy,!read_point(xx,yy,c[0],16));
			else
                write_point(x[0]+xx,y[0]+yy,read_point(xx,yy,c[0],16));
        }
    }
    x[0]+=width;
	//if((size&0x80)&&width!=16)
	//width--;
    (*c)+=((width+7)>>3);
}
void lcd::Out(int* x,int* y,  char* c,int size)
{
    while(c[0])
    {
        out_char(x,y,&c,size);
    }
}
void lcd::frush(void)
{
    unsigned char i,j;
    wr_io(cs1,0);
    //for(i=0; i<(m_height>>3); i++)
	for(i=0; i<8; i++){
        lcd_address(1+i,0);
		transfer_data(0);
        for(j=0; j<m_width; j++){
		//for(j=0; j<132; j++){
            transfer_data(buf[i*m_width+j]);
        }
    }
    wr_io(cs1,1);
}
void lcd::readString(char* c)
{
    int len = strlen(c);
    int num=0;
    int lineNum=0;
    //char* s;
   
    if(len>3){
		//clear_screen();
		memset(buf,0,(m_width*m_height)>>3);
		memset(m_line,0,sizeof(m_line));
		int len = strlen(c);
		char* s;
		if(len>3){
			s = mystrtok(c,"<> ");
			while(s)
			{
				switch(s[0]){
					default:
						s++;
					break;
					case 'T':
						s = mystrtok(NULL," \"");
						/*if(s[0]=='1'&&s[1]=='2')
						{
						len = 12;
						}
						else
						{
						len = 16;
						}*/
						len = str2int(s);
						s = mystrtok(NULL,"\">");
						//   printf("\ns=[%s]size=%d\n",s,len);
						while(s[0])
						{
							if(*s=='\n'){
								if(lineNum<3)
									lineNum++;
								num =0;
								s++;
							}
							else{	 
								m_line[lineNum].line[num]=*s++;
								m_line[lineNum].format[num]=len;
								num++;																
							}                        
						}
						//m_line[lineNum].line[num] = 0;
						s = mystrtok(NULL,"<> ");								 	
					break;
					case 'C':
					case 'c':
						s = mystrtok(NULL," >");
						len = str2int(s);
						//printf("c=%d\n",len);
						if(len<32){
							m_line[lineNum].format[len]|=0x80;
						}
						s = mystrtok(NULL,"<> ");
					break;
					case 'E':
						//    printf("next line\n");
						if(lineNum<3)
						lineNum++;
						num = 0;

						s = mystrtok(NULL,"<> ");
					break;
					case 'L':
						s = mystrtok(NULL," >");
						len = str2int(s);
						lightVal = len;
						// printf("L=%d\n",len);
						s = mystrtok(NULL,"<> ");
					break;
					case 'B':
						s = mystrtok(NULL," >");
						len = str2int(s);
						backVal = len;
						// printf("B=%d\n",len);
						s = mystrtok(NULL,"<> ");
					break;
				}
			}
		}
		{
			int x=0,y=0;
			char *pc = m_line[0].line;
			int n=0;
			while(pc[0])
			{
				if((pc[0]&0x80)==0){
					out_char(&x,&y,&pc,m_line[0].format[n]);
					n++;
				}
				else{
					out_char(&x,&y,&pc,m_line[0].format[n]);
					n+=2;
				}
			}				
			//Out(&x,&y,m_line[0].line,m_line[0].format[0]);
			x=0,y=16;
			pc = m_line[1].line;
			n=0;
			while(pc[0])
			{
				if((pc[0]&0x80)==0){
					out_char(&x,&y,&pc,m_line[1].format[n]);
					n++;
				}
				else{
					out_char(&x,&y,&pc,m_line[1].format[n]);
					n+=2;
				}			
			}
			x=0,y=32;
			pc = m_line[2].line;
			n=0;
			while(pc[0])
			{
				if((pc[0]&0x80)==0){
					out_char(&x,&y,&pc,m_line[2].format[n]);
					n++;
				}
				else{
					out_char(&x,&y,&pc,m_line[2].format[n]);
					n+=2;
				}			
			}
			x=0,y=48;
			pc = m_line[3].line;
			n=0;
			while(pc[0])
			{
				if((pc[0]&0x80)==0){
					out_char(&x,&y,&pc,m_line[3].format[n]);
					n++;
				}
				else{
					out_char(&x,&y,&pc,m_line[3].format[n]);
					n+=2;
				}			
			}
		}
	}
	else{
		int x=0,y=0;
		Out(&x,&y,"太短");
	}
}
int lcd::read_point(int x,int y,const  char* c,int size)
{
    const char *p;
	  
    if(c[0]<128){
        if(size==12){
            p=asc12;
            p+=((unsigned char)(c[0])-32)*12;
            return ((p[(1-((15-y)>>3))*6+x]&(1<<((15-y)&7)))==0)?0:1;
        }
        else{
            p=ascii_table_8x16;
            p+=((unsigned char)(c[0])-32)*16;
            return ((p[(y>>3)*8+x]&(1<<(y&7)))==0)?0:1;
        }
    }
    else{
        p = (const char*)hzk16song ;
        unsigned char  qm,wm;
        unsigned long  OffSet;
        //unsigned char  k;
        qm =  *c-0xA0;//求出区码
        wm = *(c + 1)-0xA0;//求出位码
        OffSet = ((qm - 1)*94 + (wm - 1))*32; //计算偏移量

        p+=OffSet;
        return ((p[y*2+x/8]&(0x80>>(x&7)))==0)?0:1;
    }
}


/*const char  ascii_table_5x7[95*5]=
{
   
    0x00,0x00,0x00,0x00,0x00,//space
    0x00,0x00,0x4f,0x00,0x00,//!
    0x00,0x07,0x00,0x07,0x00,//"
    0x14,0x7f,0x14,0x7f,0x14,//#
    0x24,0x2a,0x7f,0x2a,0x12,//$
    0x23,0x13,0x08,0x64,0x62,//%
    0x36,0x49,0x55,0x22,0x50,//&
    0x00,0x05,0x07,0x00,0x00,//]
    0x00,0x1c,0x22,0x41,0x00,//(
    0x00,0x41,0x22,0x1c,0x00,//)
    0x14,0x08,0x3e,0x08,0x14,// *
    0x08,0x08,0x3e,0x08,0x08,//+
    0x00,0x50,0x30,0x00,0x00,//,
    0x08,0x08,0x08,0x08,0x08,//-
    0x00,0x60,0x60,0x00,0x00,//.
    0x20,0x10,0x08,0x04,0x02,///
    0x3e,0x51,0x49,0x45,0x3e,//0
    0x00,0x42,0x7f,0x40,0x00,//1
    0x42,0x61,0x51,0x49,0x46,//2
    0x21,0x41,0x45,0x4b,0x31,//3
    0x18,0x14,0x12,0x7f,0x10,//4
    0x27,0x45,0x45,0x45,0x39,//5
    0x3c,0x4a,0x49,0x49,0x30,//6
    0x01,0x71,0x09,0x05,0x03,//7
    0x36,0x49,0x49,0x49,0x36,//8
    0x06,0x49,0x49,0x29,0x1e,//9
    0x00,0x36,0x36,0x00,0x00,//:
    0x00,0x56,0x36,0x00,0x00,//;
    0x08,0x14,0x22,0x41,0x00,//<
    0x14,0x14,0x14,0x14,0x14,//=
    0x00,0x41,0x22,0x14,0x08,//>
    0x02,0x01,0x51,0x09,0x06,//?
    0x32,0x49,0x79,0x41,0x3e,//@
    0x7e,0x11,0x11,0x11,0x7e,//A
    0x7f,0x49,0x49,0x49,0x36,//B
    0x3e,0x41,0x41,0x41,0x22,//C
    0x7f,0x41,0x41,0x22,0x1c,//D
    0x7f,0x49,0x49,0x49,0x41,//E
    0x7f,0x09,0x09,0x09,0x01,//F
    0x3e,0x41,0x49,0x49,0x7a,//G
    0x7f,0x08,0x08,0x08,0x7f,//H
    0x00,0x41,0x7f,0x41,0x00,//I
    0x20,0x40,0x41,0x3f,0x01,//J
    0x7f,0x08,0x14,0x22,0x41,//K
    0x7f,0x40,0x40,0x40,0x40,//L
    0x7f,0x02,0x0c,0x02,0x7f,//M
    0x7f,0x04,0x08,0x10,0x7f,//N
    0x3e,0x41,0x41,0x41,0x3e,//O
    0x7f,0x09,0x09,0x09,0x06,//P
    0x3e,0x41,0x51,0x21,0x5e,//Q
    0x7f,0x09,0x19,0x29,0x46,//R
    0x46,0x49,0x49,0x49,0x31,//S
    0x01,0x01,0x7f,0x01,0x01,//T
    0x3f,0x40,0x40,0x40,0x3f,//U
    0x1f,0x20,0x40,0x20,0x1f,//V
    0x3f,0x40,0x38,0x40,0x3f,//W
    0x63,0x14,0x08,0x14,0x63,//X
    0x07,0x08,0x70,0x08,0x07,//Y
    0x61,0x51,0x49,0x45,0x43,//Z
    0x00,0x7f,0x41,0x41,0x00,//[
    0x02,0x04,0x08,0x10,0x20,//\
    0x00,0x41,0x41,0x7f,0x00,//]
    0x04,0x02,0x01,0x02,0x04,//^
    0x40,0x40,0x40,0x40,0x40,//_
    0x01,0x02,0x04,0x00,0x00,//`
    0x20,0x54,0x54,0x54,0x78,//a
    0x7f,0x48,0x48,0x48,0x30,//b
    0x38,0x44,0x44,0x44,0x44,//c
    0x30,0x48,0x48,0x48,0x7f,//d
    0x38,0x54,0x54,0x54,0x58,//e
    0x00,0x08,0x7e,0x09,0x02,//f
    0x48,0x54,0x54,0x54,0x3c,//g
    0x7f,0x08,0x08,0x08,0x70,//h
    0x00,0x00,0x7a,0x00,0x00,//i
    0x20,0x40,0x40,0x3d,0x00,//j
    0x7f,0x20,0x28,0x44,0x00,//k
    0x00,0x41,0x7f,0x40,0x00,//l
    0x7c,0x04,0x38,0x04,0x7c,//m
    0x7c,0x08,0x04,0x04,0x78,//n
    0x38,0x44,0x44,0x44,0x38,//o
    0x7c,0x14,0x14,0x14,0x08,//p
    0x08,0x14,0x14,0x14,0x7c,//q
    0x7c,0x08,0x04,0x04,0x08,//r
    0x48,0x54,0x54,0x54,0x24,//s
    0x04,0x04,0x3f,0x44,0x24,//t
    0x3c,0x40,0x40,0x40,0x3c,//u
    0x1c,0x20,0x40,0x20,0x1c,//v
    0x3c,0x40,0x30,0x40,0x3c,//w
    0x44,0x28,0x10,0x28,0x44,//x
    0x04,0x48,0x30,0x08,0x04,//y
    0x44,0x64,0x54,0x4c,0x44,//z
    0x08,0x36,0x41,0x41,0x00,//{
    0x00,0x00,0x77,0x00,0x00,//|
    0x00,0x41,0x41,0x36,0x08,//}
    0x04,0x02,0x02,0x02,0x01,//~
};*/
const char asc12[]=
{
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//
0x00,0x00,0x00,0x00,//" ",0
0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,//
0x40,0x00,0x00,0x00,//"!",1
0x00,0x40,0x80,0x40,0x80,0x00,0x00,0x00,//
0x00,0x00,0x00,0x00,//""",2
0x09,0x3F,0x09,0x3F,0x09,0x00,0x00,0xC0,//
0x00,0xC0,0x00,0x00,//"#",3
0x19,0x24,0x7F,0x22,0x11,0x00,0x80,0x40,//
0xE0,0x40,0x80,0x00,//"$",4
0x18,0x25,0x1A,0x0D,0x12,0x21,0x40,0x80,//
0x00,0x80,0x40,0x80,//"%",5
0x03,0x1C,0x26,0x19,0x03,0x00,0x80,0x40,//
0x40,0x80,0x40,0x00,//"&",6
0x00,0x80,0x80,0xFF,0x00,0x00,0x00,0x20,//
0x20,0xE0,0x00,0x00,//"]",7
0x00,0x00,0x1F,0x20,0x40,0x00,0x00,0x00,//
0x00,0x80,0x40,0x00,//"(",8
0x40,0x20,0x1F,0x00,0x00,0x00,0x40,0x80,//
0x00,0x00,0x00,0x00,//")",9
0x09,0x06,0x1F,0x06,0x09,0x00,0x00,0x00,//
0x80,0x00,0x00,0x00,//"*",10
0x04,0x04,0x1F,0x04,0x04,0x00,0x00,0x00,//
0x00,0x00,0x00,0x00,//"+",11
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//
0x60,0x00,0x00,0x00,//",",12
0x04,0x04,0x04,0x04,0x04,0x00,0x00,0x00,//
0x00,0x00,0x00,0x00,//"-",13
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//
0x40,0x00,0x00,0x00,//".",14
0x00,0x03,0x0C,0x30,0x40,0x00,0xC0,0x00,//
0x00,0x00,0x00,0x00,//"/",15
0x1F,0x20,0x20,0x20,0x1F,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"0",16
0x00,0x10,0x3F,0x00,0x00,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"1",17
0x18,0x21,0x22,0x22,0x1C,0x00,0xC0,0x40,//
0x40,0x40,0x40,0x00,//"2",18
0x11,0x20,0x24,0x24,0x1B,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"3",19
0x03,0x0D,0x11,0x3F,0x01,0x00,0x00,0x00,//
0x00,0xC0,0x00,0x00,//"4",20
0x3C,0x28,0x28,0x28,0x27,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"5",21
0x0F,0x14,0x24,0x24,0x13,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"6",22
0x20,0x20,0x20,0x27,0x38,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"7",23
0x1B,0x24,0x24,0x24,0x1B,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"8",24
0x1C,0x22,0x22,0x22,0x1F,0x00,0x80,0x40,//
0x40,0x80,0x00,0x00,//"9",25
0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,//
0x40,0x00,0x00,0x00,//":",26
0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,//
0x60,0x00,0x00,0x00,//",//",27
0x04,0x0A,0x11,0x20,0x40,0x00,0x00,0x00,//
0x00,0x80,0x40,0x00,//"<",28
0x09,0x09,0x09,0x09,0x09,0x00,0x00,0x00,//
0x00,0x00,0x00,0x00,//"=",29
0x40,0x20,0x11,0x0A,0x04,0x00,0x40,0x80,//
0x00,0x00,0x00,0x00,//">",30
0x18,0x20,0x23,0x24,0x18,0x00,0x00,0x00,//
0x40,0x00,0x00,0x00,//"?",31
0x0F,0x10,0x2F,0x2F,0x11,0x0E,0x00,0x80,//
0x40,0x40,0x40,0x00,//"@",32
0x00,0x0F,0x31,0x0F,0x00,0x00,0xC0,0x00,//
0x00,0x00,0xC0,0x00,//"A",33
0x3F,0x24,0x24,0x24,0x1B,0x00,0xC0,0x40,//
0x40,0x40,0x80,0x00,//"B",34
0x1F,0x20,0x20,0x20,0x19,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"C",35
0x3F,0x20,0x20,0x20,0x1F,0x00,0xC0,0x40,//
0x40,0x40,0x80,0x00,//"D",36
0x3F,0x24,0x24,0x24,0x20,0x00,0xC0,0x40,//
0x40,0x40,0x40,0x00,//"E",37
0x3F,0x24,0x24,0x24,0x20,0x00,0xC0,0x00,//
0x00,0x00,0x00,0x00,//"F",38
0x1F,0x20,0x20,0x22,0x1B,0x00,0x80,0x40,//
0x40,0x40,0xC0,0x00,//"G",39
0x3F,0x04,0x04,0x04,0x3F,0x00,0xC0,0x00,//
0x00,0x00,0xC0,0x00,//"H",40
0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"I",41
0x01,0x00,0x00,0x00,0x3F,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"J",42
0x3F,0x04,0x0A,0x11,0x20,0x00,0xC0,0x00,//
0x00,0x80,0x40,0x00,//"K",43
0x3F,0x00,0x00,0x00,0x00,0x00,0xC0,0x40,//
0x40,0x40,0x40,0x00,//"L",44
0x3F,0x0C,0x03,0x0C,0x3F,0x00,0xC0,0x00,//
0xC0,0x00,0xC0,0x00,//"M",45
0x3F,0x18,0x06,0x01,0x3F,0x00,0xC0,0x00,//
0x00,0x80,0xC0,0x00,//"N",46
0x1F,0x20,0x20,0x20,0x1F,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"O",47
0x3F,0x22,0x22,0x22,0x1C,0x00,0xC0,0x00,//
0x00,0x00,0x00,0x00,//"P",48
0x1F,0x20,0x21,0x20,0x1F,0x00,0x80,0x40,//
0x40,0x80,0x40,0x00,//"Q",49
0x3F,0x22,0x22,0x23,0x1C,0x00,0xC0,0x00,//
0x00,0x00,0xC0,0x00,//"R",50
0x19,0x24,0x24,0x22,0x11,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"S",51
0x20,0x20,0x3F,0x20,0x20,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"T",52
0x3F,0x00,0x00,0x00,0x3F,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"U",53
0x30,0x0F,0x00,0x0F,0x30,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"V",54
0x3C,0x03,0x3E,0x03,0x3C,0x00,0x00,0xC0,//
0x00,0xC0,0x00,0x00,//"W",55
0x20,0x19,0x06,0x19,0x20,0x00,0x40,0x80,//
0x00,0x80,0x40,0x00,//"X",56
0x20,0x18,0x07,0x18,0x20,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"Y",57
0x20,0x21,0x26,0x28,0x30,0x00,0xC0,0x40,//
0x40,0x40,0x40,0x00,//"Z",58
0x00,0x00,0xFF,0x80,0x80,0x00,0x00,0x00,//
0xE0,0x20,0x20,0x00,//"[",59
0x00,0x30,0x0E,0x01,0x00,0x00,0x00,0x00,//
0x00,0x80,0x60,0x00,//"\",60
0x00,0x80,0x80,0xFF,0x00,0x00,0x00,0x20,//
0x20,0xE0,0x00,0x00,//"]",61
0x00,0x40,0x80,0x80,0x80,0x40,0x00,0x00,//
0x00,0x00,0x00,0x00,//"^",62
0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x10,//
0x10,0x10,0x10,0x10,//"_",63
0x00,0x00,0x00,0x40,0x20,0x00,0x00,0x00,//
0x00,0x00,0x00,0x00,//"`",64
0x00,0x05,0x05,0x05,0x03,0x00,0x80,0x40,//
0x40,0x40,0xC0,0x00,//"a",65
0x3F,0x04,0x04,0x04,0x03,0x00,0xC0,0x40,//
0x40,0x40,0x80,0x00,//"b",66
0x03,0x04,0x04,0x04,0x02,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"c",67
0x03,0x04,0x04,0x04,0x3F,0x00,0x80,0x40,//
0x40,0x40,0xC0,0x00,//"d",68
0x03,0x05,0x05,0x05,0x03,0x00,0x80,0x40,//
0x40,0x40,0x40,0x00,//"e",69
0x04,0x04,0x1F,0x24,0x24,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"f",70
0x03,0x05,0x05,0x07,0x04,0x00,0xE0,0x50,//
0x50,0x50,0x20,0x00,//"g",71
0x3F,0x02,0x04,0x04,0x03,0x00,0xC0,0x00,//
0x00,0x00,0xC0,0x00,//"h",72
0x00,0x00,0x27,0x00,0x00,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"i",73
0x00,0x00,0x00,0x27,0x00,0x00,0x00,0x10,//
0x10,0xE0,0x00,0x00,//"j",74
0x3F,0x01,0x03,0x04,0x00,0x00,0xC0,0x00,//
0x00,0x80,0x40,0x00,//"k",75
0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0x00,//
0xC0,0x00,0x00,0x00,//"l",76
0x07,0x04,0x07,0x04,0x03,0x00,0xC0,0x00,//
0xC0,0x00,0xC0,0x00,//"m",77
0x07,0x04,0x04,0x04,0x03,0x00,0xC0,0x00,//
0x00,0x00,0xC0,0x00,//"n",78
0x03,0x04,0x04,0x04,0x03,0x00,0x80,0x40,//
0x40,0x40,0x80,0x00,//"o",79
0x07,0x04,0x04,0x04,0x03,0x00,0xF0,0x40,//
0x40,0x40,0x80,0x00,//"p",80
0x03,0x04,0x04,0x04,0x07,0x00,0x80,0x40,//
0x40,0x40,0xF0,0x00,//"q",81
0x00,0x07,0x02,0x04,0x00,0x00,0x00,0xC0,//
0x00,0x00,0x00,0x00,//"r",82
0x02,0x05,0x05,0x05,0x04,0x00,0x40,0x40,//
0x40,0x40,0x80,0x00,//"s",83
0x04,0x04,0x1F,0x04,0x04,0x00,0x00,0x00,//
0x80,0x40,0x40,0x00,//"t",84
0x07,0x00,0x00,0x00,0x07,0x00,0x80,0x40,//
0x40,0x40,0xC0,0x00,//"u",85
0x04,0x03,0x00,0x03,0x04,0x00,0x00,0x80,//
0x40,0x80,0x00,0x00,//"v",86
0x06,0x01,0x06,0x01,0x06,0x00,0x00,0xC0,//
0x00,0xC0,0x00,0x00,//"w",87
0x04,0x02,0x01,0x02,0x04,0x00,0x40,0x80,//
0x00,0x80,0x40,0x00,//"x",88
0x04,0x03,0x00,0x03,0x04,0x00,0x00,0x90,//
0x70,0x80,0x00,0x00,//"y",89
0x04,0x04,0x05,0x06,0x04,0x00,0x40,0xC0,//
0x40,0x40,0x40,0x00,//"z",90
0x00,0x00,0x08,0xFF,0x80,0x00,0x00,0x00,//
0x00,0xC0,0x40,0x00,//"{",91
0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,//
0xF0,0x00,0x00,0x00,//"|",92
0x00,0x80,0xFF,0x08,0x00,0x00,0x00,0x40,//
0xC0,0x00,0x00,0x00,//"}",93
0x00,0x04,0x08,0x08,0x04,0x04,0x00,0x00,
0x00,0x00,0x00,0x00,/*"~",94*/
};



